name: Spring Boot Application

on:
  push:
    tags:
      - '*'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'microsoft'
          
      - name: Build maven
        run: mvn package -DskipTests -P prod
        
      - name: Upload JAR-Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: ./target/foosball-${{ github.ref_name }}.jar
          
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR-Artifact
        id: download
        uses: actions/download-artifact@v4
        with:
          name: jar-file
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload JAR File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.download.outputs.download-path }}/foosball-${{ github.ref_name }}.jar
          asset_name: foosball-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive
          
  docker:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Download JAR-Artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-file
          path: download
      - name: Verify JAR Placement
        run: |
          ls -la
          ls -la ./download/
          ls -la ./target/
          file ./target/foosball-${{ github.ref_name }}.jar
      - name: Rename JAR-File
        run: mv ${{ steps.download.outputs.download-path }}/foosball-${{ github.ref_name }}.jar /target/foosball-${{ github.ref_name }}.jar
      - name: Verify JAR Placement
        run: |
          ls -la
          ls -la ./target/
          file ./target/foosball-${{ github.ref_name }}.jar
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
